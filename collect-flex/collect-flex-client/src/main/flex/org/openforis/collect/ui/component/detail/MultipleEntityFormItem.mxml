<?xml version="1.0" encoding="utf-8"?>
<detail:EntityFormItem xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:datagroup="org.openforis.collect.ui.component.datagroup.*"
					   xmlns:detail="org.openforis.collect.ui.component.detail.*"
					   width="100%" height="100%"
					   >
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.Application;
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.model.proxy.EntityProxy;
			import org.openforis.collect.presenter.MultipleEntityFormItemPresenter;
			import org.openforis.collect.ui.Images;
			
			private var _entities:IList;
			
			private var _selectedEntity:EntityProxy;
			
			//private var _constraintLayout:ConstraintLayout;
			
			override protected function creationCompleteHandler(event:FlexEvent):void {
				super.creationCompleteHandler(event);
				//bind the position of horizontal scrollbars of header and content
				//so that the header is always aligned with the content
			}
			
			override protected function initPresenter():void {
				presenter = new MultipleEntityFormItemPresenter(this);
			}

			[Bindable]
			public function get selectedEntity():EntityProxy {
				return _selectedEntity;
			}

			public function set selectedEntity(value:EntityProxy):void {
				_selectedEntity = value;
			}

			[Bindable]
			public function get entities():IList {
				return _entities;
			}

			public function set entities(value:IList):void {
				_entities = value;
			}


			/*
			[Bindable]
			public function get constraintLayout():ConstraintLayout {
				return _constraintLayout;
			}
			
			public function set constraintLayout(value:ConstraintLayout):void {
				_constraintLayout = value;
			}
			*/
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:Fade id="showFormEffect" 
				duration="600" 
				alphaFrom="0" 
				alphaTo="1"
				/>
		
		<s:Fade id="hideFormEffect" 
				duration="400" 
				alphaFrom="1" 
				alphaTo="0"
				/>
		
	</fx:Declarations>
	
	<detail:layout>
		<s:VerticalLayout />
	</detail:layout>
	
	<s:BorderContainer id="border" 
					   height="100%" 
					   width="100%"
					   minHeight="0"
					   minWidth="0">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>

		<s:Group id="addSection" 
				 includeInLayout="{entityDefinition.multiple &amp;&amp; entityDefinition.parent != null}" 
				 visible="{entityDefinition.multiple &amp;&amp; entityDefinition.parent != null}">
			<s:layout>
				<s:HorizontalLayout paddingTop="5" horizontalAlign="left" paddingLeft="10" gap="12" verticalAlign="middle" />
			</s:layout>
			<s:Label text="{entityDefinition.getLabelText()}" styleName="bold" />
			<s:DropDownList id="dropDownList"
							prompt="{Message.get('global.dropDownPrompt')}" 
							width="{Math.max(0, entityDefinition.keyAttributeDefinitions.length - 1) * 100 + 150}" 
							labelField="fullKeyText"
							dataProvider="{entities}"
							visible="{entities != null &amp;&amp; entities.length &gt; 0}"
							includeInLayout="{entities != null &amp;&amp; entities.length &gt; 0}"
							/>
			<s:Button id="addButton" 
					  styleName="addButton" 
					  buttonMode="true" 
					  useHandCursor="true"
					  visible="{Application.activeRecordEditable}" 
					  includeInLayout="{Application.activeRecordEditable}" 
					  />
			<s:Button id="deleteButton" 
					  styleName="deleteButton" 
					  buttonMode="true" 
					  useHandCursor="true"
					  visible="{Application.activeRecordEditable &amp;&amp; dropDownList.selectedIndex >= 0}" 
					  includeInLayout="{Application.activeRecordEditable &amp;&amp; dropDownList.selectedIndex >= 0}" 
					  />
		</s:Group>
		
		<detail:ScrollableFormContainer 
			id="internalContainer"
			modelVersion="{modelVersion}"
			entityDefinition="{entityDefinition}"
			nodeDefinitions="{nodeDefinitions}"
			entity="{selectedEntity}"
			height="100%" width="100%"
			showEffect="{showFormEffect}" 
			hideEffect="{hideFormEffect}"
			visible="{! entityDefinition.multiple || entityDefinition.parent == null || dropDownList.selectedItem != null}"
			/>
			
	</s:BorderContainer>
	
</detail:EntityFormItem>
